{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the Tech1 Fiap Project.",
        "title": "Tech1 API Docs",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localshot:3210",
    "basePath": "/",
    "paths": {
        "/api/admin/customers/{id}": {
            "put": {
                "description": "Update customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Update customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "12",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "customer",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Customer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Customer has required fields"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            }
        },
        "/api/customers/login": {
            "post": {
                "description": "Get customer by CPF. This Endpoint can be used as a Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Get customer by CPF",
                "parameters": [
                    {
                        "description": "customerForm",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CustomerForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Customer"
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            }
        },
        "/api/customers/{id}": {
            "get": {
                "description": "Get customer by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Get customer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "12",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Customer"
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            }
        },
        "/api/users/login": {
            "post": {
                "description": "Get user by CPF. This Endpoint can be used as a Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserAdmin"
                ],
                "summary": "Get user by CPF",
                "parameters": [
                    {
                        "description": "UserAdminForm",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserAdminForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserAdmin"
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "description": "Get user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserAdmin"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "12",
                        "name": "Id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserAdmin"
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "description": "Update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserAdmin"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "12",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "customer",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Customer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "User has required fields"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/auth/admin/login": {
            "post": {
                "description": "Login the user by its CPF",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserAdmin"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "user form",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserAdminForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Token"
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/auth/admin/signup": {
            "post": {
                "description": "Create new customer. This process is not required to make an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserAdmin"
                ],
                "summary": "Create new user admin",
                "parameters": [
                    {
                        "description": "user admin",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UserAdmin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserAdminResponse"
                        }
                    },
                    "400": {
                        "description": "Customer has required fields"
                    },
                    "409": {
                        "description": "This user is already added"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login the customer by its CPF",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "customer form",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CustomerForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Token"
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            }
        },
        "/auth/login/unknown": {
            "post": {
                "description": "Login with unknown user. This is important if the user doesn't want to create an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Login with unknown user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Token"
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Create new customer. This process is not required to make an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Create new customer",
                "parameters": [
                    {
                        "description": "customer",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CustomerResponse"
                        }
                    },
                    "400": {
                        "description": "Customer has required fields"
                    },
                    "409": {
                        "description": "This Customer is already added"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Customer": {
            "type": "object",
            "required": [
                "cpf",
                "email",
                "name"
            ],
            "properties": {
                "cpf": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CustomerForm": {
            "type": "object",
            "required": [
                "cpf"
            ],
            "properties": {
                "cpf": {
                    "type": "string"
                }
            }
        },
        "dto.CustomerResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.Token": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                }
            }
        },
        "dto.UserAdmin": {
            "type": "object",
            "required": [
                "cpf",
                "email",
                "name"
            ],
            "properties": {
                "cpf": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.UserAdminForm": {
            "type": "object",
            "required": [
                "cpf"
            ],
            "properties": {
                "cpf": {
                    "type": "string"
                }
            }
        },
        "dto.UserAdminResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        }
    }
}