basePath: /
definitions:
  dto.Customer:
    properties:
      cpf:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - cpf
    - email
    - name
    type: object
  dto.CustomerForm:
    properties:
      cpf:
        type: string
    required:
    - cpf
    type: object
  dto.CustomerResponse:
    properties:
      id:
        type: integer
    type: object
  dto.Token:
    properties:
      accessToken:
        type: string
    type: object
  dto.UserAdmin:
    properties:
      cpf:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    required:
    - cpf
    - email
    - name
    type: object
  dto.UserAdminForm:
    properties:
      cpf:
        type: string
    required:
    - cpf
    type: object
  dto.UserAdminResponse:
    properties:
      id:
        type: integer
    type: object
host: localshot:3210
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the API for the Tech1 Fiap Project.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Tech1 API Docs
  version: "1.0"
paths:
  /api/admin/customers/{id}:
    put:
      consumes:
      - application/json
      description: Update customer
      parameters:
      - description: "12"
        in: path
        name: id
        required: true
        type: integer
      - description: customer
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.Customer'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Customer has required fields
        "404":
          description: Customer not found
      summary: Update customer
      tags:
      - Customer
  /api/customers/{id}:
    get:
      consumes:
      - application/json
      description: Get customer by ID
      parameters:
      - description: "12"
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Customer'
        "404":
          description: Customer not found
      summary: Get customer by ID
      tags:
      - Customer
  /api/customers/login:
    post:
      consumes:
      - application/json
      description: Get customer by CPF. This Endpoint can be used as a Login
      parameters:
      - description: customerForm
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/dto.CustomerForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Customer'
        "404":
          description: Customer not found
      summary: Get customer by CPF
      tags:
      - Customer
  /api/users/{id}:
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: "12"
        in: path
        name: Id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserAdmin'
        "404":
          description: User not found
      summary: Get user by ID
      tags:
      - UserAdmin
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: "12"
        in: path
        name: id
        required: true
        type: integer
      - description: customer
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.Customer'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: User has required fields
        "404":
          description: User not found
      summary: Update user
      tags:
      - UserAdmin
  /api/users/login:
    post:
      consumes:
      - application/json
      description: Get user by CPF. This Endpoint can be used as a Login
      parameters:
      - description: UserAdminForm
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.UserAdminForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserAdmin'
        "404":
          description: User not found
      summary: Get user by CPF
      tags:
      - UserAdmin
  /auth/admin/login:
    post:
      consumes:
      - application/json
      description: Login the user by its CPF
      parameters:
      - description: user form
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/dto.UserAdminForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Token'
        "404":
          description: User not found
      summary: Login
      tags:
      - UserAdmin
  /auth/admin/signup:
    post:
      consumes:
      - application/json
      description: Create new customer. This process is not required to make an order
      parameters:
      - description: user admin
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.UserAdmin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserAdminResponse'
        "400":
          description: Customer has required fields
        "409":
          description: This user is already added
      summary: Create new user admin
      tags:
      - UserAdmin
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login the customer by its CPF
      parameters:
      - description: customer form
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/dto.CustomerForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Token'
        "404":
          description: Customer not found
      summary: Login
      tags:
      - Customer
  /auth/login/unknown:
    post:
      consumes:
      - application/json
      description: Login with unknown user. This is important if the user doesn't
        want to create an account
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Token'
        "404":
          description: Customer not found
      summary: Login with unknown user
      tags:
      - Customer
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Create new customer. This process is not required to make an order
      parameters:
      - description: customer
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/dto.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CustomerResponse'
        "400":
          description: Customer has required fields
        "409":
          description: This Customer is already added
      summary: Create new customer
      tags:
      - Customer
swagger: "2.0"
